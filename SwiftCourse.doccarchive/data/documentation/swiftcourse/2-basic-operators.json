{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SwiftCourse\/documentation\/SwiftCourse"]]},"metadata":{"roleHeading":"Article","role":"article","title":"[Конспект] 2. Базовые операторы","modules":[{"name":"SwiftCourse"}]},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"Операторы-для-числовых-типов","level":2,"text":"Операторы для числовых типов","type":"heading"},{"level":3,"type":"heading","anchor":"Унарный-минус","text":"Унарный минус"},{"type":"paragraph","inlineContent":[{"text":"Унарный минус меняет знак числа. Он добавляется непосредственно перед значением, над которым он работает, без пробелов.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let three = 3","let minusThree = -three       \/\/ minusThree равно -3","let plusThree = -minusThree   \/\/ plusThree равно 3"]},{"text":"Арифметические операторы","level":3,"type":"heading","anchor":"Арифметические-операторы"},{"type":"paragraph","inlineContent":[{"text":"Swift поддерживает четыре стандартных оператора для всех типов чисел:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Сложение ( + )"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Вычитание ( - )"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Умножение ( * )","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Деление ( \/ )","type":"text"}]}]}]},{"code":["1 + 2       \/\/ = 3","5 - 3       \/\/ = 2","2 * 3       \/\/ = 6","10.0 \/ 2.5  \/\/ = 4.0"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"⚠️ Будь внимателен, любое деление на 0 приведет к аварийному завершению программы."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Особенности деление для типа Int"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"⚠️ Если в результате деления ( \/ ) у типа Int образуется дробная часть, то он ее отбрасывает, сохраняя только целое значение.","type":"text"}]},{"inlineContent":[{"text":"Отдельно у типа Int есть оператор остатка от деления ( % ). Этот оператор наоборот отбрасывает целое число и берет остаток от деления. Рассмотрим деление 11 на 4. В 11 помещается 2 раза по 4. Остаток от деления – это оставшееся число до делимого, то есть 3.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"division","type":"image"}],"type":"paragraph"},{"code":["11 \/ 4 \/\/ = 2","4 \/ 3 \/\/ = 1","5 \/ 3 \/\/ = 1","","11 % 4 \/\/ = 3","4 % 3 \/\/ = 1","5 % 3 \/\/ = 2"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Не скажу, что оператор остатка от деления используется очень часто, тем не менее знать о нем полезно. Представь, что нужно узнать является ли число четным? Для этого как раз нам нужно взять остаток от деления на 2. Если остаток равен 0, то число четное."}]},{"syntax":"swift","code":["let value = 12","let isEven = value % 2 == 0","","\/\/ value % 2 – возвращает остаток от деления на 2","\/\/ ... == 0 – сравнивает остаток с нулем"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Обрати внимание, что сначала выполняются все арифметические операторы, а только потом оператор сравнения."}],"type":"paragraph"},{"level":3,"anchor":"Составные-операторы-присваивания","type":"heading","text":"Составные операторы присваивания"},{"inlineContent":[{"text":"Иногда нужно произвести с переменной арифметическую операцию, а результат положить обратно в переменную. Для этого можно написать такой код","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var value = 0","value = value + 1 \/\/ Увеличиваем value на 1"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Но можно написать компактнее"}],"type":"paragraph"},{"code":["var value = 0","value += 1 \/\/ Увеличиваем value на 1"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Выражение "},{"type":"codeVoice","code":"value += 1"},{"type":"text","text":" является сокращением от "},{"code":"value = value + 1","type":"codeVoice"},{"type":"text","text":". По сути, сложение и присваивание объединяются в один оператор, который выполняет обе задачи одновременно."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Составные операторы работают со всеми арифметические операторами "},{"type":"codeVoice","code":"+="},{"type":"text","text":" , "},{"type":"codeVoice","code":"-="},{"type":"text","text":" , "},{"code":"*=","type":"codeVoice"},{"text":" , ","type":"text"},{"code":"\/=","type":"codeVoice"},{"type":"text","text":" , "},{"type":"codeVoice","code":"%="},{"type":"text","text":" ."}]},{"text":"Приоритет операторов","anchor":"Приоритет-операторов","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Операторы имеют такой же приоритет, как и в математике. Приоритет можно переопределить с помощью скобочек."}]},{"type":"codeListing","syntax":"swift","code":["2 + 2 * 2 \/\/ = 6","(2 + 2) * 2 \/\/ = 8"]},{"level":3,"text":"Операторы сравнения","anchor":"Операторы-сравнения","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Swift поддерживает операторы сравнения:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"равно (а == b)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"не равно (a != b)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"больше, чем (a > b)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"менее (а < б)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"больше или равно (a >= b)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"меньше или равно (a <= b)","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Каждый из операторов сравнения возвращает значение Bool, указывающее, верно ли утверждение."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["1 == 1   \/\/ true потому что 1 равен 1","2 != 1   \/\/ true потому что 2 не равен 1","2 > 1    \/\/ true потому что 2 больше 1","1 < 2    \/\/ true потому что 1 меньше 2","1 >= 1   \/\/ true потому что 1 больше или равен 1","2 <= 1   \/\/ false потому что 2 не меньше или равно 1"]},{"level":2,"type":"heading","text":"Операторы для строковые типов","anchor":"Операторы-для-строковые-типов"},{"text":"Сравнение строк","type":"heading","level":3,"anchor":"Сравнение-строк"},{"inlineContent":[{"text":"Типы String и Character поддерживают операторы сравнения:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"равно (a == b)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"не равно (a != b)"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Причем при проверке, строки проверяется посимвольно. Строки будут равны, если все символы в них совпадут.","type":"text"}]},{"code":["\"Москва\" == \"Москва\" \/\/ true","\"Привет\" == \"привет\" \/\/ false, потому что П и п разные буквы","\" машина\" != \"машина\" \/\/ true, строки разные, потому что в начале первой строки дополнительный пробел"],"syntax":"swift","type":"codeListing"},{"type":"heading","anchor":"Сложение-строк","level":3,"text":"Сложение строк"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Сложение строк еще называют – конкатенацией (concatenation). Этот оператор доступен только для String."}]},{"type":"codeListing","syntax":"swift","code":["\"Привет\" + \"мир\" \/\/ = \"Приветмир\"","\"Привет \" + \"мир\" \/\/ \"Привет мир\"","\"Привет\" + \" \" + \"мир\" \/\/ \"Привет мир\""]},{"anchor":"Интерполяция-строк","text":"Интерполяция строк","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Интерполяция строк — это способ создания строки String из смеси констант, переменных, литералов и выражений путем включения их значений в строковый литерал."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let name = \"Игорь\"","let age = 25","let message = \"Меня зовут \\(name), мне \\(age)\"","\/\/ message содержит \"Меня зовут Игорь, мне 25\""]},{"anchor":"Операторы-для-логического-типа-Bool","type":"heading","level":2,"text":"Операторы для логического типа (Bool)"},{"text":"Оператор НЕ","anchor":"Оператор-НЕ","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Логический оператор НЕ ( ! ) инвертирует логическое значение так, что true становится false, а false становится true."}],"type":"paragraph"},{"code":["!false \/\/ = true","!true \/\/ = false"],"type":"codeListing","syntax":"swift"},{"level":3,"anchor":"Оператор-И","text":"Оператор И","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Чтобы выражение с логическим оператором И ( && ) было true, нужно чтобы "},{"type":"strong","inlineContent":[{"text":"ОБА","type":"text"}]},{"type":"text","text":" операнда были true."}]},{"syntax":"swift","code":["true && true \/\/ = true","true && false \/\/ = false","false && false \/\/ = false"],"type":"codeListing"},{"text":"Оператор ИЛИ","level":3,"type":"heading","anchor":"Оператор-ИЛИ"},{"inlineContent":[{"text":"Чтобы выражение с логическим оператором ИЛИ ( || ) было true, нужно чтобы ","type":"text"},{"inlineContent":[{"text":"ХОТЯ БЫ ОДИН","type":"text"}],"type":"strong"},{"text":" из операндов был true.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["true || true \/\/ = true","true || false \/\/ = true","false || false \/\/ = false"]},{"anchor":"Приоритет-логических-операторов","level":3,"type":"heading","text":"Приоритет логических операторов"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Наивысший приоритет имеет оператор НЕ ( ! )."}]},{"inlineContent":[{"type":"text","text":"Далее по приоритетности операторы && и ||, они имею одинаковый приоритет и выполняются слева направо. Однако порядок можно переопределить с помощью скобочек."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["false && false || true \/\/ true","false && (false || true) \/\/ false"]}]}],"sections":[],"identifier":{"url":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse\/2-basic-operators","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcourse\/2-basic-operators"]}],"references":{"doc://SwiftCourse/documentation/SwiftCourse":{"abstract":[{"text":"Этот репозиторий является сборником задач по языку Swift в дополнение к видео урокам.","type":"text"}],"url":"\/documentation\/swiftcourse","title":"SwiftCourse","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse"},"division":{"variants":[{"traits":["1x","light"],"url":"\/images\/division.png"}],"type":"image","identifier":"division","alt":"division.png"}}}