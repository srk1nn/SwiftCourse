{"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftCourse\/documentation\/SwiftCourse"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"[Конспект] 4. Опциональный тип. Преобразование примитивных типов","role":"article","roleHeading":"Article","modules":[{"name":"SwiftCourse"}]},"identifier":{"url":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse\/4-optionals","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcourse\/4-optionals"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Опциональный-тип-в-Swift","text":"Опциональный тип в Swift"},{"type":"paragraph","inlineContent":[{"text":"Опциональный тип в Swift используется для обозначения переменной, которая может содержать значение или быть nil (отсутствие значения). Чтобы объявить переменную как опциональную, необходимо добавить знак вопроса ","type":"text"},{"type":"codeVoice","code":"?"},{"text":" после типа данных","type":"text"}]},{"code":["var username: String? \/\/ username может содержать или строку, или nil","username = \"Igor\" \/\/ присваиваем переменной значение","username = nil \/\/ обнуляем значение"],"type":"codeListing","syntax":"swift"},{"anchor":"Проверка-наличия-значения","text":"Проверка наличия значения","level":3,"type":"heading"},{"inlineContent":[{"text":"Проверить наличие значения можно через операторы сравнения","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Отсутствует ли значение?","let usernameMissing = username == nil","\/\/ Есть ли значение?","let hasUsername = username != nil",""],"syntax":"swift"},{"text":"if let binding","level":3,"anchor":"if-let-binding","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Перед использованием опциональной переменной необходимо извлечь ее значение. Это можно сделать с помощью конструкции "},{"type":"codeVoice","code":"if let"},{"type":"text","text":"."}]},{"code":["if let unwrappedUsername = username {","    print(unwrappedUsername)","}","","\/\/ Иногда удобнее назвать новую переменную также, как и существующую","if let username = username { ... }","","\/\/ В новых версиях Swift можно писать так. Это равноценно записи выше","if let username { ... }",""],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Принудительное разворачивание. Force unwrapping","anchor":"Принудительное-разворачивание-Force-unwrapping","level":3},{"inlineContent":[{"text":"Опциональную переменная можно принудительно развернуть с помощью ","type":"text"},{"type":"codeVoice","code":"!"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"⚠️ Однако это может привести к ошибке, если значение отсутствует. По этой причине этот оператор часто запрещают использовать в проектах. Об этом же пишет и "},{"isActive":true,"type":"reference","identifier":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/"},{"type":"text","text":" (см 2. Bang Operator! Как круто звучит, то что надо для опционала!)"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let unwrappedUsername = username!"]},{"text":"Опциональная привязка. Nil-coalescing оператор","anchor":"Опциональная-привязка-Nil-coalescing-оператор","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Опциональную переменные можно развернуть, задав ей значение по умолчанию. Это значение будет использоваться, если в опциональной переменной содержится nil.","type":"text"}]},{"type":"codeListing","code":["let unwrappedUsername = username ?? \"Значение по умолчанию\""],"syntax":"swift"},{"type":"heading","level":2,"anchor":"Преобразование-типов","text":"Преобразование типов"},{"inlineContent":[{"text":"В Swift язык со статической типизацией и строгой проверкой типов. Поэтому он требует явного преобразования типов для предотвращения ошибок, связанных с неожиданными потерями данных или округлением.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Для преобразования примитивных типов достаточно написать тип, в который нужно преобразовать, а в круглых скобках указать переменную, которую нужно преобразовать.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Преобразование примитивных типов в Int","type":"text"}]}]},{"inlineContent":[{"text":"Для удобства справа написаны тип и значение, которые получаются на выходе","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Int(23.5)     \/\/ Int: 23","Int(\"123\")    \/\/ Int?: 123","Int(\"привет\") \/\/ Int?: nil","Int(true)     \/\/ Int: 1","Int(false)    \/\/ Int: 2"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Аналогично будет работать и преобразование в Float и Double."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Преобразование примитивных типов в String"}]}],"type":"paragraph"},{"code":["String(23)             \/\/ String: \"23\"","String(123.5)          \/\/ String: \"123.5\" ","String(Character(\"a\")) \/\/ String: \"a\"","String(true)           \/\/ String: \"true\"","String(false)          \/\/ String: \"false\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Преобразование примитивных типов в Bool"}],"type":"strong"}],"type":"paragraph"},{"code":["Bool(0)      \/\/ Bool: false","Bool(1)      \/\/ Bool: true","Bool(123.5)  \/\/ Bool: true","Bool(\"true\") \/\/ Bool?: true","Bool(\"1\")    \/\/ Bool?: nil"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://SwiftCourse/documentation/SwiftCourse":{"title":"SwiftCourse","abstract":[{"text":"Этот репозиторий является сборником задач по языку Swift","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcourse","identifier":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse","role":"collection"},"https://habr.com/ru/companies/sberbank/articles/340736/":{"url":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/","identifier":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/","titleInlineContent":[{"type":"text","text":"Сбер в своей статье на хабре"}],"title":"Сбер в своей статье на хабре","type":"link"}}}