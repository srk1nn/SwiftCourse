{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftCourse\/documentation\/SwiftCourse"]]},"identifier":{"url":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse\/4-optionals","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftCourse"}],"roleHeading":"Article","role":"article","title":"[Конспект] 4. Опциональный тип. Преобразование примитивных типов"},"primaryContentSections":[{"content":[{"text":"Опциональный тип в Swift","type":"heading","anchor":"Опциональный-тип-в-Swift","level":2},{"type":"paragraph","inlineContent":[{"text":"Опциональный тип в Swift используется для обозначения переменной, которая может содержать значение или быть nil (отсутствие значения). Чтобы объявить переменную как опциональную, необходимо добавить знак вопроса ","type":"text"},{"code":"?","type":"codeVoice"},{"type":"text","text":" после типа данных"}]},{"syntax":"swift","code":["var username: String? \/\/ username может содержать или строку, или nil","username = \"Igor\" \/\/ присваиваем переменной значение","username = nil \/\/ обнуляем значение"],"type":"codeListing"},{"type":"heading","level":3,"anchor":"Проверка-наличия-значения","text":"Проверка наличия значения"},{"inlineContent":[{"type":"text","text":"Проверить наличие значения можно через операторы сравнения"}],"type":"paragraph"},{"code":["\/\/ Отсутствует ли значение?","let usernameMissing = username == nil","\/\/ Есть ли значение?","let hasUsername = username != nil",""],"type":"codeListing","syntax":"swift"},{"level":3,"type":"heading","anchor":"if-let-binding","text":"if let binding"},{"inlineContent":[{"text":"Перед использованием опциональной переменной необходимо извлечь ее значение. Это можно сделать с помощью конструкции ","type":"text"},{"code":"if let","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["if let unwrappedUsername = username {","    print(unwrappedUsername)","}","","\/\/ Иногда удобнее назвать новую переменную также, как и существующую","if let username = username { ... }","","\/\/ В новых версиях Swift можно писать так. Это равноценно записи выше","if let username { ... }",""]},{"type":"heading","text":"Принудительное разворачивание. Force unwrapping","anchor":"Принудительное-разворачивание-Force-unwrapping","level":3},{"inlineContent":[{"type":"text","text":"Опциональную переменная можно принудительно развернуть с помощью "},{"type":"codeVoice","code":"!"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"⚠️ Однако это может привести к ошибке, если значение отсутствует. По этой причине этот оператор часто запрещают использовать в проектах. Об этом же пишет и ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/"},{"type":"text","text":" (см 2. Bang Operator! Как круто звучит, то что надо для опционала!)"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let unwrappedUsername = username!"]},{"level":3,"anchor":"Опциональная-привязка-Nil-coalescing-оператор","type":"heading","text":"Опциональная привязка. Nil-coalescing оператор"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Опциональную переменные можно развернуть, задав ей значение по умолчанию. Это значение будет использоваться, если в опциональной переменной содержится nil."}]},{"code":["let unwrappedUsername = username ?? \"Значение по умолчанию\""],"type":"codeListing","syntax":"swift"},{"text":"Преобразование типов","type":"heading","level":2,"anchor":"Преобразование-типов"},{"inlineContent":[{"text":"В Swift язык со статической типизацией и строгой проверкой типов. Поэтому он требует явного преобразования типов для предотвращения ошибок, связанных с неожиданными потерями данных или округлением.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Для преобразования примитивных типов достаточно написать тип, в который нужно преобразовать, а в круглых скобках указать переменную, которую нужно преобразовать."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Преобразование примитивных типов в Int","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Для удобства справа написаны тип и значение, которые получаются на выходе","type":"text"}]},{"type":"codeListing","code":["Int(23.5)     \/\/ Int: 23","Int(\"123\")    \/\/ Int?: 123","Int(\"привет\") \/\/ Int?: nil","Int(true)     \/\/ Int: 1","Int(false)    \/\/ Int: 2"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Аналогично будет работать и преобразование в Float и Double."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Преобразование примитивных типов в String"}]}],"type":"paragraph"},{"code":["String(23)             \/\/ String: \"23\"","String(123.5)          \/\/ String: \"123.5\" ","String(Character(\"a\")) \/\/ String: \"a\"","String(true)           \/\/ String: \"true\"","String(false)          \/\/ String: \"false\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Преобразование примитивных типов в Bool"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Bool(0)      \/\/ Bool: false","Bool(1)      \/\/ Bool: true","Bool(123.5)  \/\/ Bool: true","Bool(\"true\") \/\/ Bool?: true","Bool(\"1\")    \/\/ Bool?: nil"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcourse\/4-optionals"]}],"kind":"article","references":{"doc://SwiftCourse/documentation/SwiftCourse":{"url":"\/documentation\/swiftcourse","title":"SwiftCourse","abstract":[{"text":"Этот репозиторий является сборником задач по языку Swift","type":"text"}],"type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/SwiftCourse\/documentation\/SwiftCourse"},"https://habr.com/ru/companies/sberbank/articles/340736/":{"titleInlineContent":[{"text":"Сбер в своей статье на хабре","type":"text"}],"identifier":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/","url":"https:\/\/habr.com\/ru\/companies\/sberbank\/articles\/340736\/","type":"link","title":"Сбер в своей статье на хабре"}}}